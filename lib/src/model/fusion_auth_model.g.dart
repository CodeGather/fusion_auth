// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'fusion_auth_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

FusionAuthModel _$FusionAuthModelFromJson(Map<String, dynamic> json) =>
    FusionAuthModel(
      token: json['token'] as String?,
      schemeCode: json['schemeCode'] as String?,
      templateId: json['templateId'] as String?,
      logEnable: json['logEnable'] as bool?,
      checkBoxShakePath: json['checkBoxShakePath'] as String?,
      checkBoxMarginTop: json['checkBoxMarginTop'] as int?,
      navUseFont: json['navUseFont'] as bool?,
      numberUseFont: json['numberUseFont'] as bool?,
      swtichUseFont: json['swtichUseFont'] as bool?,
      webCacheMode: json['webCacheMode'] as int?,
      debugMode: json['debugMode'] as bool? ?? true,
      isDelay: json['isDelay'] as bool? ?? false,
      statusBarColor: json['statusBarColor'] as String?,
      bottomNavColor: json['bottomNavColor'] as String?,
      isLightColor: json['isLightColor'] as bool?,
      isStatusBarHidden: json['isStatusBarHidden'] as bool?,
      statusBarUIFlag:
          $enumDecodeNullable(_$UIFAGEnumMap, json['statusBarUIFlag']),
      navColor: json['navColor'] as String?,
      navText: json['navText'] as String?,
      navTextSize: json['navTextSize'] as int?,
      navTextColor: json['navTextColor'] as String?,
      navReturnImgPath: json['navReturnImgPath'] as String?,
      navReturnImgWidth: json['navReturnImgWidth'] as int?,
      navReturnImgHeight: json['navReturnImgHeight'] as int?,
      navReturnHidden: json['navReturnHidden'] as bool?,
      navReturnScaleType:
          $enumDecodeNullable(_$ScaleTypeEnumMap, json['navReturnScaleType']),
      navHidden: json['navHidden'] as bool?,
      sloganText: json['sloganText'] as String?,
      sloganOffsetY: json['sloganOffsetY'] as int?,
      sloganTextColor: json['sloganTextColor'] as String?,
      sloganTextSize: json['sloganTextSize'] as int?,
      sloganHidden: json['sloganHidden'] as bool?,
      logoImgPath: json['logoImgPath'] as String?,
      logoHidden: json['logoHidden'] as bool?,
      logoOffsetY: json['logoOffsetY'] as int?,
      logoScaleType:
          $enumDecodeNullable(_$ScaleTypeEnumMap, json['logoScaleType']),
      logoWidth: json['logoWidth'] as int?,
      logoHeight: json['logoHeight'] as int?,
      numberColor: json['numberColor'] as String?,
      numberSize: json['numberSize'] as int?,
      switchAccHidden: json['switchAccHidden'] as bool?,
      switchAccTextColor: json['switchAccTextColor'] as String?,
      logBtnToastHidden: json['logBtnToastHidden'] as bool?,
      logBtnText: json['logBtnText'] as String?,
      logBtnTextSize: json['logBtnTextSize'] as int?,
      logBtnTextColor: json['logBtnTextColor'] as String?,
      logBtnOffsetY: json['logBtnOffsetY'] as int?,
      logBtnWidth: json['logBtnWidth'] as int?,
      logBtnHeight: json['logBtnHeight'] as int?,
      logBtnOffsetX: json['logBtnOffsetX'] as int?,
      logBtnBackgroundPath: json['logBtnBackgroundPath'] as String?,
      logBtnTextColorStateList: json['logBtnTextColorStateList'] as String?,
      logBtnMarginLeftAndRight: json['logBtnMarginLeftAndRight'] as int?,
      logBtnLayoutGravity:
          $enumDecodeNullable(_$GravityEnumMap, json['logBtnLayoutGravity']),
      protocolOneName: json['protocolOneName'] as String?,
      protocolOneURL: json['protocolOneURL'] as String?,
      protocolOwnOneColor: json['protocolOwnOneColor'] as String?,
      protocolTwoName: json['protocolTwoName'] as String?,
      protocolTwoURL: json['protocolTwoURL'] as String?,
      protocolOwnTwoColor: json['protocolOwnTwoColor'] as String?,
      protocolThreeName: json['protocolThreeName'] as String?,
      protocolThreeURL: json['protocolThreeURL'] as String?,
      protocolOwnThreeColor: json['protocolOwnThreeColor'] as String?,
      protocolColor: json['protocolColor'] as String?,
      protocolLayoutGravity:
          $enumDecodeNullable(_$GravityEnumMap, json['protocolLayoutGravity']),
      protocolUseFont: json['protocolUseFont'] as bool?,
      protocolOneColor: json['protocolOneColor'] as String?,
      protocolTwoColor: json['protocolTwoColor'] as String?,
      protocolShakePath: json['protocolShakePath'] as String?,
      protocolThreeColor: json['protocolThreeColor'] as String?,
      protocolOwnColor: json['protocolOwnColor'] as String?,
      loadingImgPath: json['loadingImgPath'] as String?,
      numFieldOffsetY: json['numFieldOffsetY'] as int?,
      numberFieldOffsetX: json['numberFieldOffsetX'] as int?,
      numberLayoutGravity:
          $enumDecodeNullable(_$GravityEnumMap, json['numberLayoutGravity']),
      switchOffsetY: json['switchOffsetY'] as int?,
      checkBoxWidth: json['checkBoxWidth'] as int?,
      checkBoxHeight: json['checkBoxHeight'] as int?,
      checkboxHidden: json['checkboxHidden'] as bool?,
      switchAccTextSize: json['switchAccTextSize'] as int?,
      switchAccText: json['switchAccText'] as String?,
      uncheckedImgPath: json['uncheckedImgPath'] as String?,
      checkedImgPath: json['checkedImgPath'] as String?,
      vendorPrivacyPrefix: json['vendorPrivacyPrefix'] as String?,
      vendorPrivacySuffix: json['vendorPrivacySuffix'] as String?,
      tapAuthPageMaskClosePage:
          json['tapAuthPageMaskClosePage'] as bool? ?? false,
      dialogWidth: json['dialogWidth'] as int?,
      dialogHeight: json['dialogHeight'] as int?,
      dialogBottom: json['dialogBottom'] as bool?,
      dialogOffsetX: json['dialogOffsetX'] as int?,
      dialogOffsetY: json['dialogOffsetY'] as int?,
      pageBackgroundPath: json['pageBackgroundPath'] as String?,
      webViewStatusBarColor: json['webViewStatusBarColor'] as String?,
      webNavColor: json['webNavColor'] as String?,
      webNavTextColor: json['webNavTextColor'] as String?,
      webNavTextSize: json['webNavTextSize'] as int?,
      webNavReturnImgPath: json['webNavReturnImgPath'] as String?,
      webSupportedJavascript: json['webSupportedJavascript'] as bool?,
      authPageActIn: json['authPageActIn'] as String?,
      activityOut: json['activityOut'] as String?,
      authPageActOut: json['authPageActOut'] as String?,
      activityIn: json['activityIn'] as String?,
      screenOrientation: json['screenOrientation'] as int?,
      dialogAlpha: json['dialogAlpha'] as int?,
      privacyOffsetY: json['privacyOffsetY'] as int?,
      privacyState: json['privacyState'] as bool?,
      protocolGravity:
          $enumDecodeNullable(_$GravityEnumMap, json['protocolGravity']),
      privacyTextSize: json['privacyTextSize'] as int?,
      privacyMargin: json['privacyMargin'] as int?,
      privacyBefore: json['privacyBefore'] as String?,
      privacyEnd: json['privacyEnd'] as String?,
      privacyAlertTitleTextUseFont:
          json['privacyAlertTitleTextUseFont'] as bool?,
      privacyAlertTitleText: json['privacyAlertTitleText'] as String?,
      privacyAlertContentTextUseFont:
          json['privacyAlertContentTextUseFont'] as bool?,
      privacyAlertBefore: json['privacyAlertBefore'] as String?,
      privacyAlertEnd: json['privacyAlertEnd'] as String?,
      privacyAlertBtnTextColorStateList:
          json['privacyAlertBtnTextColorStateList'] as String?,
      privacyAlertBtnGrivaty: (json['privacyAlertBtnGrivaty'] as List<dynamic>?)
          ?.map((e) => e as int)
          .toList(),
      privacyAlertBtnOffsetX: json['privacyAlertBtnOffsetX'] as int?,
      privacyAlertBtnOffsetY: json['privacyAlertBtnOffsetY'] as int?,
      privacyAlertBtnText: json['privacyAlertBtnText'] as String?,
      privacyAlertBtnUseFont: json['privacyAlertBtnUseFont'] as bool?,
      privacyAlertBtnHorizontalMargin:
          json['privacyAlertBtnHorizontalMargin'] as int?,
      privacyAlertBtnVerticalMargin:
          json['privacyAlertBtnVerticalMargin'] as int?,
      privacyOperatorIndex: json['privacyOperatorIndex'] as int?,
      privacyAlertIsNeedShow: json['privacyAlertIsNeedShow'] as bool? ?? false,
      privacyAlertIsNeedAutoLogin:
          json['privacyAlertIsNeedAutoLogin'] as bool? ?? true,
      privacyAlertMaskIsNeedShow:
          json['privacyAlertMaskIsNeedShow'] as bool? ?? true,
      privacyAlertMaskAlpha:
          (json['privacyAlertMaskAlpha'] as num?)?.toDouble() ?? 0.3,
      privacyAlertAlpha: (json['privacyAlertAlpha'] as num?)?.toDouble() ?? 0.2,
      privacyAlertBackgroundColor:
          json['privacyAlertBackgroundColor'] as String?,
      privacyAlertEntryAnimation: json['privacyAlertEntryAnimation'] as String?,
      privacyAlertExitAnimation: json['privacyAlertExitAnimation'] as String?,
      privacyAlertAlignment:
          $enumDecodeNullable(_$GravityEnumMap, json['privacyAlertAlignment']),
      privacyAlertWidth: json['privacyAlertWidth'] as int?,
      privacyAlertHeight: json['privacyAlertHeight'] as int?,
      privacyAlertOffsetX: json['privacyAlertOffsetX'] as int?,
      privacyAlertOffsetY: json['privacyAlertOffsetY'] as int?,
      privacyAlertTitleBackgroundColor:
          json['privacyAlertTitleBackgroundColor'] as String?,
      privacyAlertTitleAlignment: $enumDecodeNullable(
          _$GravityEnumMap, json['privacyAlertTitleAlignment']),
      privacyAlertTitleTextSize:
          json['privacyAlertTitleTextSize'] as int? ?? 18,
      privacyAlertTitleColor: json['privacyAlertTitleColor'] as String?,
      privacyAlertContentBackgroundColor:
          json['privacyAlertContentBackgroundColor'] as String?,
      privacyAlertContentTextSize:
          json['privacyAlertContentTextSize'] as int? ?? 16,
      privacyAlertContentAlignment: $enumDecodeNullable(
          _$GravityEnumMap, json['privacyAlertContentAlignment']),
      privacyAlertContentColor: json['privacyAlertContentColor'] as String?,
      privacyAlertCornerRadiusArray:
          (json['privacyAlertCornerRadiusArray'] as List<dynamic>?)
              ?.map((e) => e as int)
              .toList(),
      privacyAlertContentBaseColor:
          json['privacyAlertContentBaseColor'] as String?,
      privacyAlertBtnBackgroundImgPath:
          json['privacyAlertBtnBackgroundImgPath'] as String?,
      privacyAlertBtnTextColor: json['privacyAlertBtnTextColor'] as String?,
      privacyAlertBtnTextSize: json['privacyAlertBtnTextSize'] as int? ?? 18,
      privacyAlertBtnHeigth: json['privacyAlertBtnHeigth'] as int?,
      privacyAlertCloseBtnShow: json['privacyAlertCloseBtnShow'] as bool?,
      privacyAlertCloseScaleType: $enumDecodeNullable(
          _$ScaleTypeEnumMap, json['privacyAlertCloseScaleType']),
      privacyAlertCloseImgWidth: json['privacyAlertCloseImgWidth'] as int?,
      privacyAlertCloseImgHeight: json['privacyAlertCloseImgHeight'] as int?,
      privacyAlertOwnOneColor: json['privacyAlertOwnOneColor'] as String?,
      privacyAlertOwnTwoColor: json['privacyAlertOwnTwoColor'] as String?,
      privacyAlertOwnThreeColor: json['privacyAlertOwnThreeColor'] as String?,
      privacyAlertOperatorColor: json['privacyAlertOperatorColor'] as String?,
      tapPrivacyAlertMaskCloseAlert:
          json['tapPrivacyAlertMaskCloseAlert'] as bool? ?? true,
    );

Map<String, dynamic> _$FusionAuthModelToJson(FusionAuthModel instance) =>
    <String, dynamic>{
      'token': instance.token,
      'schemeCode': instance.schemeCode,
      'templateId': instance.templateId,
      'logEnable': instance.logEnable,
      'isDelay': instance.isDelay,
      'debugMode': instance.debugMode,
      'statusBarColor': instance.statusBarColor,
      'bottomNavColor': instance.bottomNavColor,
      'isLightColor': instance.isLightColor,
      'isStatusBarHidden': instance.isStatusBarHidden,
      'statusBarUIFlag': _$UIFAGEnumMap[instance.statusBarUIFlag],
      'navColor': instance.navColor,
      'navText': instance.navText,
      'navTextColor': instance.navTextColor,
      'navReturnImgPath': instance.navReturnImgPath,
      'navReturnImgWidth': instance.navReturnImgWidth,
      'navReturnImgHeight': instance.navReturnImgHeight,
      'navReturnHidden': instance.navReturnHidden,
      'navReturnScaleType': _$ScaleTypeEnumMap[instance.navReturnScaleType],
      'navHidden': instance.navHidden,
      'logoImgPath': instance.logoImgPath,
      'logoHidden': instance.logoHidden,
      'numberColor': instance.numberColor,
      'numberSize': instance.numberSize,
      'switchAccHidden': instance.switchAccHidden,
      'switchAccTextColor': instance.switchAccTextColor,
      'logBtnText': instance.logBtnText,
      'logBtnTextSize': instance.logBtnTextSize,
      'logBtnTextColor': instance.logBtnTextColor,
      'sloganTextColor': instance.sloganTextColor,
      'sloganText': instance.sloganText,
      'logBtnBackgroundPath': instance.logBtnBackgroundPath,
      'loadingImgPath': instance.loadingImgPath,
      'sloganOffsetY': instance.sloganOffsetY,
      'logoOffsetY': instance.logoOffsetY,
      'logoScaleType': _$ScaleTypeEnumMap[instance.logoScaleType],
      'numFieldOffsetY': instance.numFieldOffsetY,
      'numberFieldOffsetX': instance.numberFieldOffsetX,
      'numberLayoutGravity': _$GravityEnumMap[instance.numberLayoutGravity],
      'switchOffsetY': instance.switchOffsetY,
      'logBtnOffsetY': instance.logBtnOffsetY,
      'logBtnWidth': instance.logBtnWidth,
      'logBtnHeight': instance.logBtnHeight,
      'logBtnOffsetX': instance.logBtnOffsetX,
      'logBtnMarginLeftAndRight': instance.logBtnMarginLeftAndRight,
      'logBtnLayoutGravity': _$GravityEnumMap[instance.logBtnLayoutGravity],
      'privacyOffsetY': instance.privacyOffsetY,
      'checkBoxWidth': instance.checkBoxWidth,
      'checkBoxHeight': instance.checkBoxHeight,
      'checkboxHidden': instance.checkboxHidden,
      'navTextSize': instance.navTextSize,
      'logoWidth': instance.logoWidth,
      'logoHeight': instance.logoHeight,
      'switchAccTextSize': instance.switchAccTextSize,
      'switchAccText': instance.switchAccText,
      'sloganTextSize': instance.sloganTextSize,
      'sloganHidden': instance.sloganHidden,
      'uncheckedImgPath': instance.uncheckedImgPath,
      'checkedImgPath': instance.checkedImgPath,
      'privacyState': instance.privacyState,
      'privacyTextSize': instance.privacyTextSize,
      'privacyMargin': instance.privacyMargin,
      'privacyBefore': instance.privacyBefore,
      'privacyEnd': instance.privacyEnd,
      'vendorPrivacyPrefix': instance.vendorPrivacyPrefix,
      'vendorPrivacySuffix': instance.vendorPrivacySuffix,
      'dialogWidth': instance.dialogWidth,
      'dialogHeight': instance.dialogHeight,
      'dialogBottom': instance.dialogBottom,
      'dialogOffsetX': instance.dialogOffsetX,
      'dialogOffsetY': instance.dialogOffsetY,
      'pageBackgroundPath': instance.pageBackgroundPath,
      'webViewStatusBarColor': instance.webViewStatusBarColor,
      'webNavColor': instance.webNavColor,
      'webNavTextColor': instance.webNavTextColor,
      'webNavTextSize': instance.webNavTextSize,
      'webNavReturnImgPath': instance.webNavReturnImgPath,
      'webSupportedJavascript': instance.webSupportedJavascript,
      'authPageActIn': instance.authPageActIn,
      'activityOut': instance.activityOut,
      'authPageActOut': instance.authPageActOut,
      'activityIn': instance.activityIn,
      'checkBoxShakePath': instance.checkBoxShakePath,
      'screenOrientation': instance.screenOrientation,
      'logBtnToastHidden': instance.logBtnToastHidden,
      'dialogAlpha': instance.dialogAlpha,
      'privacyOperatorIndex': instance.privacyOperatorIndex,
      'privacyAlertIsNeedShow': instance.privacyAlertIsNeedShow,
      'privacyAlertIsNeedAutoLogin': instance.privacyAlertIsNeedAutoLogin,
      'tapPrivacyAlertMaskCloseAlert': instance.tapPrivacyAlertMaskCloseAlert,
      'privacyAlertAlignment': _$GravityEnumMap[instance.privacyAlertAlignment],
      'privacyAlertWidth': instance.privacyAlertWidth,
      'privacyAlertHeight': instance.privacyAlertHeight,
      'privacyAlertOffsetX': instance.privacyAlertOffsetX,
      'privacyAlertOffsetY': instance.privacyAlertOffsetY,
      'privacyAlertEntryAnimation': instance.privacyAlertEntryAnimation,
      'privacyAlertExitAnimation': instance.privacyAlertExitAnimation,
      'privacyAlertBackgroundColor': instance.privacyAlertBackgroundColor,
      'privacyAlertTitleBackgroundColor':
          instance.privacyAlertTitleBackgroundColor,
      'privacyAlertAlpha': instance.privacyAlertAlpha,
      'privacyAlertMaskAlpha': instance.privacyAlertMaskAlpha,
      'privacyAlertTitleTextSize': instance.privacyAlertTitleTextSize,
      'privacyAlertTitleColor': instance.privacyAlertTitleColor,
      'privacyAlertTitleAlignment':
          _$GravityEnumMap[instance.privacyAlertTitleAlignment],
      'privacyAlertContentTextSize': instance.privacyAlertContentTextSize,
      'privacyAlertContentColor': instance.privacyAlertContentColor,
      'privacyAlertCornerRadiusArray': instance.privacyAlertCornerRadiusArray,
      'privacyAlertContentBaseColor': instance.privacyAlertContentBaseColor,
      'privacyAlertContentBackgroundColor':
          instance.privacyAlertContentBackgroundColor,
      'privacyAlertContentAlignment':
          _$GravityEnumMap[instance.privacyAlertContentAlignment],
      'privacyAlertBtnBackgroundImgPath':
          instance.privacyAlertBtnBackgroundImgPath,
      'privacyAlertBtnTextColor': instance.privacyAlertBtnTextColor,
      'privacyAlertBtnTextSize': instance.privacyAlertBtnTextSize,
      'privacyAlertBtnHeigth': instance.privacyAlertBtnHeigth,
      'privacyAlertCloseBtnShow': instance.privacyAlertCloseBtnShow,
      'privacyAlertMaskIsNeedShow': instance.privacyAlertMaskIsNeedShow,
      'privacyAlertCloseScaleType':
          _$ScaleTypeEnumMap[instance.privacyAlertCloseScaleType],
      'privacyAlertCloseImgWidth': instance.privacyAlertCloseImgWidth,
      'privacyAlertCloseImgHeight': instance.privacyAlertCloseImgHeight,
      'navUseFont': instance.navUseFont,
      'numberUseFont': instance.numberUseFont,
      'checkBoxMarginTop': instance.checkBoxMarginTop,
      'swtichUseFont': instance.swtichUseFont,
      'webCacheMode': instance.webCacheMode,
      'logBtnTextColorStateList': instance.logBtnTextColorStateList,
      'privacyAlertTitleTextUseFont': instance.privacyAlertTitleTextUseFont,
      'privacyAlertTitleText': instance.privacyAlertTitleText,
      'privacyAlertContentTextUseFont': instance.privacyAlertContentTextUseFont,
      'privacyAlertOwnOneColor': instance.privacyAlertOwnOneColor,
      'privacyAlertOwnTwoColor': instance.privacyAlertOwnTwoColor,
      'privacyAlertOwnThreeColor': instance.privacyAlertOwnThreeColor,
      'privacyAlertOperatorColor': instance.privacyAlertOperatorColor,
      'protocolOwnOneColor': instance.protocolOwnOneColor,
      'protocolOneName': instance.protocolOneName,
      'protocolOneURL': instance.protocolOneURL,
      'protocolOneColor': instance.protocolOneColor,
      'protocolOwnThreeColor': instance.protocolOwnThreeColor,
      'protocolOwnColor': instance.protocolOwnColor,
      'protocolUseFont': instance.protocolUseFont,
      'protocolThreeName': instance.protocolThreeName,
      'protocolThreeURL': instance.protocolThreeURL,
      'protocolThreeColor': instance.protocolThreeColor,
      'protocolShakePath': instance.protocolShakePath,
      'protocolGravity': _$GravityEnumMap[instance.protocolGravity],
      'protocolOwnTwoColor': instance.protocolOwnTwoColor,
      'protocolTwoName': instance.protocolTwoName,
      'protocolTwoURL': instance.protocolTwoURL,
      'protocolTwoColor': instance.protocolTwoColor,
      'protocolColor': instance.protocolColor,
      'protocolLayoutGravity': _$GravityEnumMap[instance.protocolLayoutGravity],
      'privacyAlertBefore': instance.privacyAlertBefore,
      'tapAuthPageMaskClosePage': instance.tapAuthPageMaskClosePage,
      'privacyAlertEnd': instance.privacyAlertEnd,
      'privacyAlertBtnTextColorStateList':
          instance.privacyAlertBtnTextColorStateList,
      'privacyAlertBtnGrivaty': instance.privacyAlertBtnGrivaty,
      'privacyAlertBtnOffsetX': instance.privacyAlertBtnOffsetX,
      'privacyAlertBtnOffsetY': instance.privacyAlertBtnOffsetY,
      'privacyAlertBtnText': instance.privacyAlertBtnText,
      'privacyAlertBtnUseFont': instance.privacyAlertBtnUseFont,
      'privacyAlertBtnHorizontalMargin':
          instance.privacyAlertBtnHorizontalMargin,
      'privacyAlertBtnVerticalMargin': instance.privacyAlertBtnVerticalMargin,
    };

const _$UIFAGEnumMap = {
  UIFAG.systemUiFalgLowProfile: 'systemUiFalgLowProfile',
  UIFAG.systemUiFalgHideNavigation: 'systemUiFalgHideNavigation',
  UIFAG.systemUiFalgFullscreen: 'systemUiFalgFullscreen',
  UIFAG.systemUiFalgLayoutStable: 'systemUiFalgLayoutStable',
  UIFAG.systemUiFalgLayoutHideNavigtion: 'systemUiFalgLayoutHideNavigtion',
  UIFAG.systemUiFalgLayoutFullscreen: 'systemUiFalgLayoutFullscreen',
  UIFAG.systemUiFalgImmersive: 'systemUiFalgImmersive',
  UIFAG.systemUiFalgImmersiveSticky: 'systemUiFalgImmersiveSticky',
  UIFAG.systemUiFalgLightStatusBar: 'systemUiFalgLightStatusBar',
  UIFAG.systemUiFalgLightNavigationBar: 'systemUiFalgLightNavigationBar',
};

const _$ScaleTypeEnumMap = {
  ScaleType.matrix: 'matrix',
  ScaleType.fitXy: 'fitXy',
  ScaleType.fitStart: 'fitStart',
  ScaleType.fitCenter: 'fitCenter',
  ScaleType.fitEnd: 'fitEnd',
  ScaleType.center: 'center',
  ScaleType.centerCrop: 'centerCrop',
  ScaleType.centerInside: 'centerInside',
};

const _$GravityEnumMap = {
  Gravity.centerHorizntal: 'centerHorizntal',
  Gravity.left: 'left',
  Gravity.right: 'right',
};
